access_log  /var/log/nginx/access.log;
error_log  /var/log/nginx/error.log  error;

proxy_buffer_size          128k;
proxy_buffers              4 256k;
proxy_busy_buffers_size    256k;

# Reverse proxy to oauth2-proxy
server {
  listen       80;
  #server_name  dynata-dev-app1.folio3.com;

  location /oauth2 {
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    proxy_pass http://oauth2-proxy:4180;
    
    auth_request_set $auth_cookie $upstream_http_set_cookie;
    add_header Set-Cookie $auth_cookie;
    
    # set $cors "";
    # if ($http_origin ~* (\.mydomain\.com|\.myseconddomain\.com)$) {
    #     set $cors "true";
    # }
    set $cors "true";

    if ($cors = "true") {
      add_header 'Access-Control-Allow-Origin' $http_origin always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization, X-Auth-Request-Access-Token, Origin' always;
      add_header 'Access-Control-Expose-Headers' 'Authorization, X-Auth-Request-Access-Token' always;
    }
  }

  # Statically serve the nginx welcome
  location / {
    auth_request /internal-auth/oauth2/auth;

    # If the auth_request denies the request (401), redirect to the sign_in page
    # and include the final rd URL back to the user's original request.
    error_page 401 = http://dynata-dev-oauth2proxy.folio3.com:56003/oauth2/sign_in?rd=$scheme://$host:$server_port$request_uri;

    # Alternatively send the request to `start` to skip the provider button
    # error_page 401 = http://dynata-dev-oauth2proxy.folio3.com:56003/oauth2/start?rd=$scheme://$host:$server_port$request_uri;


    root   /usr/share/nginx/html;
    index  index.html index.htm;
  }

  # redirect server error pages to the static page /50x.html
  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /usr/share/nginx/html;
  }

  # auth_request must be a URI so this allows an internal path to then proxy to
  # the real auth_request path.
  # The trailing /'s are required so that nginx strips the prefix before proxying.
  location /internal-auth/ {
    internal; # Ensure external users can't access this path

    # Make sure the OAuth2 Proxy knows where the original request came from.
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    proxy_pass http://oauth2-proxy:4180/;
  }
}