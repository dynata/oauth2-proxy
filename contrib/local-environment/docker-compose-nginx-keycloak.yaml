# This docker-compose file can be used to bring up an example instance of oauth2-proxy
# for manual testing and exploration of features.
# Alongside OAuth2-Proxy, this file also starts Dex to act as the identity provider,
# etcd for storage for Dex, nginx as a reverse proxy and other http services for upstreams
#
# This file is an extension of the main compose file and must be used with it
#    docker-compose -f docker-compose.yaml -f docker-compose-nginx.yaml <command>
# Alternatively:
#    make nginx-<command> (eg make nginx-up, make nginx-down)
#
# Access one of the following URLs to initiate a login flow:
#    - http://oauth2-proxy.localhost
#
# The OAuth2 Proxy itself is hosted at http://oauth2-proxy.oauth2-proxy.localhost
#
# Note, the above URLs should work with Chrome, but you may need to add hosts
# entries for other browsers
#    127.0.0.1 oauth2-proxy.localhost
#    127.0.0.1 oauth2-proxy.oauth2-proxy.localhost

version: '3.0'
services:
  nginx:
    container_name: nginx
    image: nginx:1.18
    ports:
      - 80:80/tcp
    hostname: nginx
    volumes:
      - "./nginx-keycloak.conf:/etc/nginx/conf.d/default.conf"
    networks:
      oauth2-proxy: {}
    depends_on:
      - oauth2-proxy
      - keycloak
  upstream-app:
    container_name: upstream-app
    image: php:7.2-apache
    hostname: upstream-app
    ports:
      - 8000:80/tcp
    volumes:
      - "./upstream:/var/www/html"
    networks:
      oauth2-proxy:
        aliases:
          - upstream-app.localhost
    depends_on:
      - oauth2-proxy
  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:debug
    command: --config /oauth2-proxy.cfg
    hostname: oauth2-proxy
    volumes:
      - "./oauth2-proxy-nginx-keycloak.cfg:/oauth2-proxy.cfg"
    restart: unless-stopped
    networks:
      oauth2-proxy:
        aliases:
          - oauth2-proxy.localhost
    depends_on:
      - keycloak
    ports:
      - 4180:4180/tcp
  keycloak:
    container_name: keycloak
    image: jboss/keycloak:10.0.0
    hostname: keycloak
    command:
      [
        '-b',
        '0.0.0.0',
        '-Djboss.socket.binding.port-offset=1000',
        '-Dkeycloak.migration.action=import',
        '-Dkeycloak.migration.provider=dir',
        '-Dkeycloak.migration.dir=/realm-config',
        '-Dkeycloak.migration.strategy=IGNORE_EXISTING',
      ]
    volumes:
      - ./keycloak-nginx:/realm-config
    environment:
      DB_VENDOR: h2
      KEYCLOAK_USER: admin@example.com
      KEYCLOAK_PASSWORD: password
    networks:
      oauth2-proxy:
        aliases:
          - keycloak.localhost
    ports:
      - 9080:9080/tcp

networks:
  oauth2-proxy:
    external:
      name: pe